<?php
// $Id: yamm_server.theme,v 1.3 2009/11/05 20:19:36 pounard Exp $

/**
 * @file
 * Yamm server theme() functions implementation.
 */

/**
 * Theme a return to back page link in case we have the destination parameter.
 * 
 * @return string
 *   (x)html output
 */
function theme_yamm_server_page_back() {
  // I really do not like the $_REQUEST variable
  if ($destination = $_REQUEST['destination']) {
    return '<p>' . l(t('Back to previous page'), $destination) . '</p>';
  }
}

/**
 * Theme the operation form on client overview page.
 * 
 * @return string
 *   (x)html output
 */
function theme_yamm_server_client_operations_form($form) {
  $output .= '<div class="container-inline">' . drupal_render($form['operations']) . '</div>';
  $output .= drupal_render($form);
  return $output;
}

/**
 * Theme handler client list page
 * 
 * @param array $form
 * @return string
 *   (x)html output
 */
function theme_yamm_server_client_list($form) {
  $output .= '<div class="container-inline">' . drupal_render($form['options']) . '</div>';

  if (isset($form['clients']['name']) && is_array($form['clients']['name'])) {
    foreach (element_children($form['clients']['name']) as $key) {
      $row = array();
      $row[] = drupal_render($form['clients']['checkboxes'][$key]);
      $row[] = drupal_render($form['clients']['name'][$key]);
      $row[] = drupal_render($form['clients']['url'][$key]);
      $row[] = drupal_render($form['clients']['username'][$key]);
      $row[] = drupal_render($form['clients']['status'][$key]);
      $row[] = drupal_render($form['clients']['operations'][$key]);
      $rows[] = $row;
    }
  }
  else {
    $rows[] = array(array('data' => t('No clients available.'), 'colspan' => '5'));
  }

  $output .= theme('table', $form['clients']['header']['#value'], $rows);
  $output .= drupal_render($form);

  return $output;
}

/**
 * Theme handler client list page (client operations)
 * 
 * @param object $client
 * @param string $destination = NULL
 *   (optional) destination path where to return to
 * @return string
 *   (x)html output
 */
function theme_yamm_server_client_operations($client, $destination = NULL) {
  $links = array(
    array(
      'title' => t('Overview'),
      'href' => 'admin/yamm/client/' . $client->name . '/view',
      /*'query' => array('destination' => $destination),*/
    ),
    array(
      'title' => t('Edit'),
      'href' => 'admin/yamm/client/' . $client->name .'/edit',
      'query' => array('destination' => $destination),
    ),
    array(
      'title' => t('Test'),
      'href' => 'admin/yamm/client/' . $client->name . '/hello',
      'query' => array('destination' => $destination,
    ),
  ));
  return theme('links', $links);
}

/**
 * Theme handler for profile overview page
 * 
 * @param array $form
 * @return string
 *   (x)html output
 */
function theme_yamm_server_profile_overview($form) {
  $output .= '<div class="container-inline">' . drupal_render($form['options']) . '</div>';

  if (isset($form['profiles']['name']) && is_array($form['profiles']['name'])) {
    foreach (element_children($form['profiles']['name']) as $key) {
      $row = array();
      $row[] = drupal_render($form['profiles']['checkboxes'][$key]);
      $row[] = drupal_render($form['profiles']['radios'][$key]);
      $row[] = drupal_render($form['profiles']['profile'][$key]);
      $row[] = drupal_render($form['profiles']['name'][$key]);
      $row[] = drupal_render($form['profiles']['operations'][$key]);
      $rows[] = $row;
    }
  }
  else {
    $rows[] = array(array('data' => t('No Profile available.'), 'colspan' => '5'));
  }

  $output .= theme('table', $form['profiles']['header']['#value'], $rows);
  $output .= drupal_render($form);

  return $output;
}

/**
 * Theme status human readable name
 * 
 * @param int $status
 *   One of the YAMM_STATUS_* constant
 * @return string
 *   (x)html output
 */
function theme_yamm_server_status($status) {
  $output = '';
  switch ($status) {
    case YAMM_STATUS_ACTIVATE:
      $output .= t('Activated');
      break;
    case YAMM_STATUS_SUSPEND:
      $output .= t('Suspended');
      break;
    default:
      $output .= t('Unknown');
  }
  return $output;
}
